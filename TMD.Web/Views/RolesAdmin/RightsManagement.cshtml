@model TMD.Web.ViewModels.RightsManagement.RightsManagementViewModel

@{
    ViewBag.Title = "Rights Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Navigation Bar -->
<div class="breadcrumb-container" dir="ltr">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title </small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")

@using (Html.BeginForm("RightsManagement", "RolesAdmin"))
{
    <div class="container-fluid">

        @*<h2 class="page-header">Rights Management</h2>*@

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="form-horizontal">
            <div class="control-group row-fluid">
                <div class="span1">
                    <label class="control-label" style="font-weight: bold">Role</label>
                </div>
                <div class="span3">
                    @Html.DropDownListFor(x => x.SelectedRoleId, new SelectList(Model.Roles, "Id", "Name"), new { @class = " mandatory form-control", onchange = "this.form.submit();" })
                </div>
            </div>
            @foreach (var item in @Model.Rights.Where(item => item.IsParent))
            {
                <div class="control-group row-fluid area">
                    <div class="span3 areaItem">
                        @Html.CheckBoxFor(m => item.IsSelected, new { value = item.MenuId, @class = "parentCheckbox" })
                        <h4 class="areaLabel">@item.MenuTitle</h4>
                        @*<label style="padding-left:10px;font-weight: 700">@item.MenuTitle</label>*@
                    </div>
                    @foreach (var childItems in @Model.Rights.Where(childItem => childItem.ParentId == item.MenuId))
                    {
                        <div class="control-group row-fluid childItem">
                            <div class="span12">
                                @Html.CheckBoxFor(m => childItems.IsSelected, new { value = childItems.MenuId, @class = "childCheckbox" })
                                @*<label class="controllerLabel">@childItems.MenuTitle</label>*@
                                <h5 class="controllerLabel">@childItems.MenuTitle</h5>
                                <div class="control-group row-fluid childItem">
                                    @foreach (var actions in @Model.Rights.Where(actions => actions.ParentId == childItems.MenuId))
                                    {
                                        <div class="span2">
                                            @Html.CheckBoxFor(m => actions.IsSelected, new { value = actions.MenuId, @class = "childCheckbox actionChek" })
                                            <label class="actionLabel">@actions.MenuTitle</label>
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>

                    }
                </div>
            }
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    @Html.ActionLink("Save", "PostRightsManagement", new { roleValue = "SelectedRoleValue", selectedList = "SelectedListValues" }, new { @class = "btn", id = "btnSave" })
                </div>
            </div>
        </div>
    </div>
}
<script>
    $("#btnSave").click(function (evt) {
        $("#btnSave").prop("href", ProcessValue($("#btnSave").prop("href")));
    });

    function ProcessValue(fakedUri) {
        var uri = fakedUri.replace("SelectedRoleValue", $('#SelectedRoleId').val());
        uri = uri.replace("SelectedListValues", getSelectedList());
        return uri;
    }

    function getSelectedList() {
        var selectedList = "";
        $("input:checkbox:checked").each(function () {
            if ($(this).attr('value') != undefined && $(this).attr('value').length > 0) {
                selectedList += $(this).attr('value') + ",";
            }
        });
        if (selectedList.length > 1)
            selectedList = selectedList.substring(0, selectedList.length - 1);
        return selectedList;
    }


</script>
